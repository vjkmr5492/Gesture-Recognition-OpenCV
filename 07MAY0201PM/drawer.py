import cv2
import cv2.cv as cv
import numpy as np
import os, pickle
import time, pprint
from GestureFeatureExtractor import GestureFeatureExtractor as GFE
from scipy.cluster.vq import kmeans, vq, whiten
from DiscreteHMM import DiscreteHMM
from HiddenMarkov import HiddenMarkov
from Codebook import Codebook
from Points import Points
from Centroid import Centroid

gname="UL"
# tname="UL"
started=False
ar=0

def save_object(obj, filename):
    with open(filename, 'wb') as output:
        pickle.dump(obj, output, pickle.HIGHEST_PROTOCOL)

def load_object(filename):
    with open(filename, 'rb') as input:
        return pickle.load(input)


def on_mouse(event, x, y, flags, params):
    global started
    global ar
    if event == cv.CV_EVENT_LBUTTONDOWN:
        # print 'Start Mouse Position: '+str(x)+', '+str(y)
        if started==False:
            started=True
        else:
            started=False
        sbox = [x, y]
        boxes.append(sbox)
    elif event == cv.CV_EVENT_MOUSEMOVE:
        ar+=1
        if started==True:
            ebox = [x, y]
            boxes.append(ebox)
            # print ebox
            
    

def directory(name):
    if not os.path.exists(name):
        os.makedirs(name)

def gen_cb():
    print "Generating Codebook..."
    vector=[]
    dirs = [name for name in os.listdir(".") if os.path.isdir(os.path.join(".", name)) and name!='data']
    for diri in dirs:
        
        print "Working for "+diri
        raws = [name for name in os.listdir("./"+diri) if name.endswith(".raw")]
        for name in raws:
            print "Processing file "+name
            rl =  load_object("./"+diri+"/"+name)
            ob = GFE(rl)
            for i in range(len(rl)-1):
                vector.append(ob.extractedFeature[i].getNFeatureVector())
    X=np.vstack(vector).squeeze()
    print X
    directory("data")
    c=Codebook()
    c.genCB(X)
    c.saveToFile()

def genxcb():
    
    rl=[[355,137],[354,137],[353,137],[352,137],[351,137],[350,137],[349,137],[348,137],[347,137],[345,137],[344,137],[342,137],[338,137],[336,137],[332,137],[327,137],[322,138],[320,138],[317,138],[315,138],[313,138],[311,137],[309,137],[308,137],[305,137],[304,137],[302,137],[301,137],[300,137],[298,136],[295,136],[294,136],[292,136],[288,136],[286,136],[285,136],[282,134],[279,134],[278,134],[276,134],[275,135],[274,135],[272,135],[269,135],[268,135],[266,135],[265,135],[262,135],[260,136],[259,136],[257,136],[253,136],[251,136],[249,136],[246,136],[241,136],[239,136],[237,136],[235,137],[234,137],[232,137],[228,137],[226,137],[221,137],[219,137],[218,137],[217,137],[215,137],[213,137],[209,137],[205,137],[201,137],[198,137],[197,137],[191,137],[188,137],[186,137],[184,137],[182,137],[181,137],[180,137],[178,137],[177,137],[175,137],[173,137],[172,137],[171,137],[168,137],[164,137],[161,137],[158,137],[155,139],[152,139],[147,140],[145,140],[143,142],[140,143],[138,143],[136,143],[136,144],[133,144],[133,145],[133,146],[130,146],[129,146],[128,146],[126,146],[125,145],[124,145],[123,144],[122,147],[121,147],[120,148],[119,148]]
    # rl=[[354,136],[351,136],[351,138],[350,138],[348,138],[347,138],[345,139],[344,139],[343,139],[342,139],[339,139],[338,139],[335,139],[331,139],[328,139],[322,139],[309,139],[305,139],[297,139],[292,137],[285,136],[282,136],[276,136],[269,136],[265,136],[257,136],[249,136],[242,136],[231,136],[227,136],[224,136],[219,136],[217,135],[214,135],[210,135],[205,135],[202,135],[198,135],[195,135],[190,135],[187,135],[183,135],[180,135],[178,135],[174,135],[169,136],[166,136],[164,136],[160,136],[158,136],[155,136],[153,136],[151,136],[147,136],[145,136],[142,136],[140,136],[136,136],[132,136],[128,136],[122,136],[118,135],[115,135],[110,135],[107,135],[105,135],[103,135],[102,135],[99,135],[98,135],[97,135],[96,135],[95,135],[94,135], [164,37],[164,39],[164,40],[165,43],[165,46],[166,46],[166,49],[166,51],[167,53],[167,57],[167,60],[167,62],[167,66],[167,68],[167,71],[167,73],[167,74],[166,77],[166,79],[166,81],[166,85],[166,86],[166,89],[166,91],[166,93],[166,95],[166,96],[166,97],[166,98],[166,101],[166,104],[166,105],[166,106],[166,109],[166,111],[166,112],[166,114],[166,116],[166,117],[166,120],[166,121],[166,123],[166,126],[166,131],[166,132],[166,135],[166,140],[166,142],[166,145],[166,147],[164,154],[164,156],[164,157],[164,159],[164,160],[164,161],[164,163],[164,165],[164,166],[164,167],[164,169],[164,172],[164,174],[164,175],[164,177],[164,180],[164,182],[164,184],[164,185],[164,188],[164,192],[164,194],[164,196],[164,197],[164,199],[163,203],[163,205],[163,206],[162,206],[163,206],[164,206],[165,205],[165,204],[167,204],[169,204],[171,204],[173,204],[175,204],[177,204],[180,204],[185,204],[189,204],[192,204],[195,204],[199,204],[204,204],[207,204],[211,203],[214,203],[216,203],[217,202],[219,202],[220,202],[221,202],[223,202],[225,202],[226,202],[227,202],[228,202],[230,202],[234,202],[237,202],[238,202],[239,202],[241,202],[243,202],[246,202],[250,202],[253,202],[257,202],[261,202],[263,202],[266,202],[269,201],[271,201],[272,201],[273,201],[275,201],[276,201], [272,39],[272,41],[272,42],[272,43],[272,45],[272,48],[272,53],[272,56],[272,64],[272,69],[272,74],[272,79],[272,82],[272,86],[272,89],[272,94],[272,100],[272,105],[272,107],[272,112],[272,113],[272,117],[272,119],[272,124],[272,127],[272,128],[272,131],[272,133],[271,140],[271,141],[271,143],[271,146],[271,148],[271,152],[271,154],[270,155],[270,158],[270,161],[270,163],[271,165],[271,168],[272,171],[272,172],[272,178],[274,181],[274,182],[274,184],[274,186],[274,189],[274,190],[274,191],[274,194],[274,195],[274,196],[274,197],[274,199],[274,200],[274,201],[274,202],[273,202],[272,202],[271,202],[270,202],[268,201],[260,201],[258,201],[257,201],[254,201],[250,201],[248,201],[246,201],[241,203],[239,203],[237,203],[236,203],[233,203],[231,203],[229,203],[226,203],[224,203],[222,203],[221,203],[218,203],[215,203],[211,204],[209,204],[208,204],[207,204],[203,206],[202,207],[201,207],[200,207],[198,207],[197,207],[196,207],[196,206],[192,206],[189,206],[186,206],[183,206],[181,206],[179,206],[177,206],[175,206],[173,207],[172,207],[171,207],[170,207],[169,207],[168,207],[166,207]]
    rl_line=[[354,136],[351,136],[351,138],[350,138],[348,138],[347,138],[345,139],[344,139],[343,139],[342,139],[339,139],[338,139],[335,139],[331,139],[328,139],[322,139],[309,139],[305,139],[297,139],[292,137],[285,136],[282,136],[276,136],[269,136],[265,136],[257,136],[249,136],[242,136],[231,136],[227,136],[224,136],[219,136],[217,135],[214,135],[210,135],[205,135],[202,135],[198,135],[195,135],[190,135],[187,135],[183,135],[180,135],[178,135],[174,135],[169,136],[166,136],[164,136],[160,136],[158,136],[155,136],[153,136],[151,136],[147,136],[145,136],[142,136],[140,136],[136,136],[132,136],[128,136],[122,136],[118,135],[115,135],[110,135],[107,135],[105,135],[103,135],[102,135],[99,135],[98,135],[97,135],[96,135],[95,135],[94,135]]
    rl_l=[[164,37],[164,39],[164,40],[165,43],[165,46],[166,46],[166,49],[166,51],[167,53],[167,57],[167,60],[167,62],[167,66],[167,68],[167,71],[167,73],[167,74],[166,77],[166,79],[166,81],[166,85],[166,86],[166,89],[166,91],[166,93],[166,95],[166,96],[166,97],[166,98],[166,101],[166,104],[166,105],[166,106],[166,109],[166,111],[166,112],[166,114],[166,116],[166,117],[166,120],[166,121],[166,123],[166,126],[166,131],[166,132],[166,135],[166,140],[166,142],[166,145],[166,147],[164,154],[164,156],[164,157],[164,159],[164,160],[164,161],[164,163],[164,165],[164,166],[164,167],[164,169],[164,172],[164,174],[164,175],[164,177],[164,180],[164,182],[164,184],[164,185],[164,188],[164,192],[164,194],[164,196],[164,197],[164,199],[163,203],[163,205],[163,206],[162,206],[163,206],[164,206],[165,205],[165,204],[167,204],[169,204],[171,204],[173,204],[175,204],[177,204],[180,204],[185,204],[189,204],[192,204],[195,204],[199,204],[204,204],[207,204],[211,203],[214,203],[216,203],[217,202],[219,202],[220,202],[221,202],[223,202],[225,202],[226,202],[227,202],[228,202],[230,202],[234,202],[237,202],[238,202],[239,202],[241,202],[243,202],[246,202],[250,202],[253,202],[257,202],[261,202],[263,202],[266,202],[269,201],[271,201],[272,201],[273,201],[275,201],[276,201]]
    rl_ul=[[272,39],[272,41],[272,42],[272,43],[272,45],[272,48],[272,53],[272,56],[272,64],[272,69],[272,74],[272,79],[272,82],[272,86],[272,89],[272,94],[272,100],[272,105],[272,107],[272,112],[272,113],[272,117],[272,119],[272,124],[272,127],[272,128],[272,131],[272,133],[271,140],[271,141],[271,143],[271,146],[271,148],[271,152],[271,154],[270,155],[270,158],[270,161],[270,163],[271,165],[271,168],[272,171],[272,172],[272,178],[274,181],[274,182],[274,184],[274,186],[274,189],[274,190],[274,191],[274,194],[274,195],[274,196],[274,197],[274,199],[274,200],[274,201],[274,202],[273,202],[272,202],[271,202],[270,202],[268,201],[260,201],[258,201],[257,201],[254,201],[250,201],[248,201],[246,201],[241,203],[239,203],[237,203],[236,203],[233,203],[231,203],[229,203],[226,203],[224,203],[222,203],[221,203],[218,203],[215,203],[211,204],[209,204],[208,204],[207,204],[203,206],[202,207],[201,207],[200,207],[198,207],[197,207],[196,207],[196,206],[192,206],[189,206],[186,206],[183,206],[181,206],[179,206],[177,206],[175,206],[173,207],[172,207],[171,207],[170,207],[169,207],[168,207],[166,207]]
    vector=[]

    boxes=rl
    ob = GFE(rl)
        
    for i in range(len(rl)-1):
        vector.append(ob.extractedFeature[i].getNFeatureVector())
    # print vector
    X=np.vstack(vector).squeeze()
    # print "FE", X
    
    # X=[[0.5498777221779195,-7.0,0.0,4.0,8.0,-2.0 ,-2.0,1.0],[0.5466592375644066,-7.0,-0.0,5.0,8.0,-2.0 ,-2.0,1.0],[0.5529049916556976,-7.0,3.0,5.0,8.0,-2.0 ,-2.0,1.0],[0.5622283565546609,-7.0,5.0,4.0,8.0,-2.0 ,-2.0,1.0],[0.5594220869315173,-7.0,4.0,5.0,8.0,-2.0 ,-2.0,1.0],[0.5688063232296658,-7.0,5.0,4.0,8.0,-2.0 ,-2.0,1.0],[0.5662011538857719,-7.0,4.0,5.0,8.0,-2.0 ,-2.0,1.0],[0.5732328983424478,-7.0,4.0,5.0,8.0,-2.0 ,-2.0,1.0],[0.5827221048725184,-7.0,5.0,0.0,8.0,-2.0 ,-2.0,1.0],[0.5805081382619239,-7.0,4.0,0.0,8.0,-2.0 ,-2.0,1.0],[0.5880178357841751,-7.0,5.0,5.0,8.0,-2.0 ,-2.0,1.0],[0.586149431499605,-7.0,4.0,3.0,8.0,-2.0 ,-2.0,1.0],[0.5925423596002576,-8.0,4.0,3.0,8.0,-2.0 ,-2.0,1.0],[0.6008546628177532,-8.0,4.0,4.0,8.0,-2.0 ,-2.0,1.0],[0.6093666691777366,-8.0,4.0,4.0,8.0,-2.0 ,-2.0,1.0],[0.6074854195043199,-8.0,4.0,3.0,8.0,-2.0 ,-2.0,1.0],[0.6067784471596106,-8.0,4.0,3.0,8.0,-2.0 ,-2.0,1.0],[0.6155959818091201,-8.0,4.0,3.0,8.0,-3.0 ,-3.0,1.0],[0.6250524586912576,0.0,4.0,3.0,8.0,-3.0 ,-3.0,1.0],[0.6251287543837836,9.0,3.0,3.0,8.0,-3.0 ,-3.0,1.0],[0.6354946821445137,9.0,3.0,3.0,8.0,-3.0 ,-3.0,1.0],[0.636019791456208,9.0,3.0,3.0,8.0,-3.0 ,-3.0,1.0],[0.6375177205009205,9.0,3.0,3.0,7.0,-3.0 ,-3.0,1.0],[0.6384894898832236,9.0,3.0,2.0,7.0,-3.0 ,-3.0,1.0],[0.6408752599509872,9.0,3.0,2.0,7.0,-3.0 ,-3.0,1.0],[0.6422876179753912,9.0,3.0,2.0,7.0,-3.0 ,-3.0,1.0],[0.6438450407315629,9.0,3.0,2.0,7.0,-3.0 ,-3.0,1.0],[0.6473907951643174,8.0,3.0,2.0,7.0,-3.0 ,-3.0,1.0],[0.6493767739781124,8.0,2.0,2.0,7.0,-3.0 ,-3.0,1.0],[0.6515031192433564,8.0,2.0,2.0,7.0,-3.0 ,-3.0,1.0],[0.6537684613594438,8.0,2.0,2.0,7.0,-3.0 ,-3.0,1.0],[0.6561713607249522,8.0,2.0,2.0,7.0,-3.0 ,-3.0,1.0],[0.6587103119625843,8.0,2.0,2.0,7.0,-3.0 ,-3.0,1.0],[0.661383748227097,8.0,2.0,2.0,7.0,-3.0 ,-3.0,1.0],[0.6641900455704467,8.0,2.0,2.0,7.0,-3.0 ,-3.0,1.0],[0.6733891004314899,8.0,2.0,2.0,7.0,-3.0 ,-3.0,1.0],[0.67670961447829,7.0,2.0,2.0,7.0,-3.0 ,-3.0,1.0],[0.6801541670515956,7.0,2.0,2.0,7.0,-3.0 ,-3.0,1.0],[0.6837208834537766,7.0,2.0,2.0,7.0,-3.0 ,-3.0,1.0],[0.6874078620926916,7.0,2.0,1.0,7.0,-3.0 ,-3.0,1.0],[0.6912131785098906,7.0,2.0,1.0,7.0,-3.0 ,-3.0,1.0],[0.6951348892894934,7.0,2.0,1.0,7.0,-3.0 ,-3.0,1.0],[0.6903156331759382,7.0,2.0,1.0,7.0,-3.0 ,-3.0,1.0],[0.6945171440177738,7.0,2.0,1.0,7.0,-3.0 ,-3.0,1.0],[0.6988298935685157,7.0,2.0,1.0,7.0,-3.0 ,-3.0,1.0],[0.6901083415542757,7.0,2.0,1.0,7.0,-3.0 ,-3.0,1.0],[0.6945858095124314,7.0,2.0,1.0,7.0,-3.0 ,-3.0,1.0],[0.6991710358361218,7.0,2.0,1.0,7.0,-3.0 ,-3.0,1.0],[0.6905919252154885,7.0,1.0,1.0,7.0,-3.0 ,-3.0,1.0],[0.6953406824225229,7.0,1.0,1.0,7.0,-3.0 ,-3.0,1.0],[0.6868526052475655,7.0,1.0,1.0,7.0,-3.0 ,-3.0,1.0],[0.6967795324935613,6.0,1.0,1.0,7.0,-3.0 ,-3.0,1.0],[0.6884477616263729,6.0,1.0,1.0,7.0,-3.0 ,-3.0,2.0],[0.685392915826566,6.0,1.0,1.0,6.0,-3.0 ,-3.0,2.0],[0.6826039198597232,6.0,1.0,-0.0,6.0,-3.0 ,-3.0,2.0],[0.6881013030660459,6.0,1.0,-0.0,6.0,-3.0 ,-3.0,2.0],[0.6721130698283653,6.0,1.0,-0.0,6.0,-3.0 ,-3.0,2.0],[0.683651126693563,6.0,1.0,-0.0,6.0,-3.0 ,-3.0,2.0],[0.6758633745293061,6.0,1.0,-0.0,6.0,-3.0 ,-3.0,2.0],[0.6741677079449234,6.0,1.0,-0.0,6.0,-3.0 ,-3.0,2.0],[0.6652662386266048,5.0,-0.0,-0.0,6.0,-3.0 ,-3.0,2.0],[0.671616180972486,5.0,-0.0,-0.0,6.0,-3.0 ,-3.0,2.0],[0.6642618460188021,5.0,-0.0,-0.0,6.0,-3.0 ,-3.0,2.0],[0.6701944685801099,5.0,-0.0,-0.0,6.0,-3.0 ,-3.0,2.0],[0.663112105916755,5.0,-0.0,-0.0,6.0,-3.0 ,-3.0,2.0],[0.6699097640351553,5.0,-0.0,-0.0,6.0,-3.0 ,-3.0,2.0],[0.6629682482068688,5.0,-0.0,-0.0,6.0,-3.0 ,-3.0,2.0],[0.6701944685801099,5.0,-0.0,-0.0,6.0,-3.0 ,-3.0,2.0],[0.6635434919144043,5.0,-0.0,-1.0,6.0,-3.0 ,-3.0,2.0],[0.6642618460188021,5.0,-0.0,-1.0,6.0,-3.0 ,-3.0,2.0],[0.671616180972486,5.0,-0.0,-1.0,6.0,-3.0 ,-3.0,2.0],[0.6589998549708362,4.0,-0.0,-1.0,6.0,-3.0 ,-3.0,2.0],[0.6665553766958998,4.0,-0.0,-1.0,6.0,-3.0 ,-3.0,2.0],[0.6621764721542923,4.0,-0.0,-1.0,6.0,-3.0 ,-3.0,2.0],[0.6641900455704467,4.0,-0.0,-1.0,6.0,-3.0 ,-3.0,2.0],[0.6664838233301528,4.0,-1.0,-1.0,6.0,-3.0 ,-3.0,2.0],[0.6745213233418825,4.0,-1.0,-1.0,6.0,-3.0 ,-3.0,2.0],[0.6690549234946431,4.0,-1.0,-1.0,6.0,-3.0 ,-3.0,2.0],[0.6750160736848615,4.0,-1.0,-1.0,6.0,-3.0 ,-3.0,2.0],[0.673530732381827,3.0,-1.0,-1.0,5.0,-3.0 ,-3.0,2.0],[0.6773436006195578,3.0,-1.0,-1.0,5.0,-3.0 ,-3.0,2.0],[0.6727513876663654,3.0,-1.0,-1.0,5.0,-3.0 ,-3.0,2.0],[0.6769914593944996,3.0,-1.0,-1.0,5.0,-3.0 ,-3.0,2.0],[0.6726804933737751,3.0,-1.0,-2.0,5.0,-3.0 ,-3.0,2.0],[0.6644054236376882,3.0,-1.0,-2.0,5.0,-3.0 ,-3.0,2.0],[0.6656245829771941,3.0,-1.0,-2.0,5.0,-3.0 ,-3.0,2.0],[0.6619603688668987,3.0,-1.0,-2.0,5.0,-2.0 ,-2.0,2.0],[0.6584206416266936,3.0,-1.0,-2.0,5.0,-2.0 ,-2.0,3.0],[0.6550074194791096,3.0,-2.0,-2.0,5.0,-2.0 ,-2.0,3.0],[0.6455464782861284,2.0,-2.0,-2.0,5.0,-2.0 ,-2.0,3.0],[0.6426587752545475,2.0,-2.0,-2.0,5.0,-2.0 ,-2.0,3.0],[0.639907113633374,2.0,-2.0,-2.0,5.0,-2.0 ,-2.0,3.0],[0.6372932555961863,2.0,-2.0,-2.0,5.0,-2.0 ,-2.0,3.0],[0.6348189033583085,2.0,-2.0,-2.0,5.0,-2.0 ,-2.0,3.0],[0.6324856942070499,2.0,-2.0,-2.0,5.0,-2.0 ,-2.0,3.0],[0.6302951955829676,2.0,-2.0,-3.0,5.0,-2.0 ,-2.0,3.0],[0.6263482215352527,2.0,-2.0,-3.0,5.0,-2.0 ,-2.0,3.0],[0.6245944888224509,1.0,-2.0,-3.0,5.0,-2.0 ,-2.0,3.0],[0.622988943077847,1.0,-2.0,-3.0,5.0,-2.0 ,-2.0,3.0],[0.6215327326939396,1.0,-2.0,-3.0,5.0,-2.0 ,-2.0,3.0],[0.620226909530382,1.0,-2.0,-3.0,5.0,-2.0 ,-2.0,3.0],[0.6180701278539844,1.0,-2.0,-3.0,5.0,-2.0 ,-2.0,3.0],[0.61722075879677,1.0,-3.0,-3.0,5.0,-2.0 ,-2.0,3.0],[0.6159832221957895,1.0,-3.0,-3.0,5.0,-2.0 ,-2.0,3.0],[0.6155959818091201,1.0,-3.0,-3.0,5.0,-2.0 ,-2.0,3.0],[0.6055983258859868,-0.0,-3.0,-3.0,5.0,-2.0 ,-2.0,3.0],[0.5960732499817132,-0.0,-3.0,-3.0,5.0,-2.0 ,-2.0,3.0],[0.5970325959618761,-0.0,-3.0,-3.0,4.0,-2.0 ,-2.0,3.0],[0.5880178357841751,-0.0,-3.0,-4.0,4.0,-2.0 ,-2.0,3.0],[0.5802616205333775,-0.0,-3.0,-4.0,4.0,-2.0 ,-2.0,3.0],[0.5814931640918403,-0.0,-3.0,-4.0,4.0,-2.0 ,-2.0,3.0],[0.5748114831223711,-0.0,-3.0,-4.0,4.0,-2.0 ,-2.0,3.0],[0.5688901623226452,-1.0,-4.0,-4.0,4.0,-2.0 ,-2.0,3.0],[0.5709821387953828,-1.0,-4.0,-4.0,4.0,-2.0 ,-2.0,3.0],[0.5782032187978178,-1.0,-4.0,-4.0,4.0,-2.0 ,-2.0,3.0],[0.5744795099597562,-1.0,-4.0,-4.0,4.0,-2.0 ,-2.0,3.0],[0.5749773978272616,-2.0,-4.0,-4.0,4.0,-1.0 ,-1.0,3.0],[0.5811650076525612,-2.0,-4.0,-5.0,4.0,-1.0 ,-1.0,3.0],[0.5854166935392252,-2.0,-4.0,-5.0,4.0,-1.0 ,-1.0,3.0],[0.5880178357841751,-3.0,-5.0,-5.0,4.0,-1.0 ,-1.0,4.0],[0.5918981165615957,-3.0,-5.0,-5.0,4.0,-1.0 ,-1.0,4.0],[0.6018063867449819,-4.0,-5.0,-5.0,4.0,-1.0 ,-1.0,4.0],[0.6146656095165237,-4.0,-5.0,-6.0,3.0,-1.0 ,-1.0,4.0],[0.6302951955829676,-4.0,-5.0,-6.0,3.0,-1.0 ,-1.0,4.0],[0.6484948675857085,-5.0,-6.0,-6.0,3.0,-1.0 ,-1.0,4.0],[0.6745213233418825,-5.0,-6.0,-6.0,3.0,-1.0 ,-1.0,4.0],[0.6833720284469066,-5.0,-6.0,-6.0,3.0,-0.0 ,-0.0,4.0],[0.703861914590597,-6.0,-6.0,-6.0,3.0,-0.0 ,-0.0,4.0],[0.7206683277425316,-6.0,-6.0,-6.0,3.0,-0.0 ,-0.0,4.0],[0.7437902663523424,-6.0,-6.0,-7.0,2.0,-0.0 ,-0.0,4.0],[0.754485505812733,-6.0,-6.0,-7.0,2.0,-0.0 ,-0.0,4.0],[0.7721052447471417,-7.0,-7.0,-7.0,2.0,-0.0 ,-0.0,4.0],[0.7942107391661178,-7.0,-7.0,-7.0,2.0,-0.0 ,-0.0,4.0],[0.8009080119760713,-7.0,-7.0,-7.0,2.0,-0.0 ,-0.0,4.0],[0.8199161513416039,-7.0,-7.0,-7.0,2.0,-0.0 ,-0.0,4.0],[0.8447268939556709,-7.0,-7.0,-7.0,2.0,-0.0 ,-0.0,4.0],[0.8674010525909363,-8.0,-7.0,-8.0,2.0,-0.0 ,-0.0,4.0],[0.8843891789045415,-8.0,-7.0,-8.0,1.0,-0.0 ,-0.0,4.0],[0.9019035361689115,-8.0,-7.0,-8.0,1.0,-0.0 ,-0.0,4.0],[0.9193436107091286,-8.0,-8.0,-8.0,1.0,-0.0 ,-0.0,4.0],[0.9282747491555924,-8.0,-8.0,-8.0,1.0,-0.0 ,-0.0,4.0],[0.9376295535564159,-8.0,-8.0,-8.0,1.0,-0.0 ,-0.0,4.0],[0.9571614048732928,9.0,-8.0,-8.0,1.0,-0.0 ,-0.0,4.0],[0.967666907857835,9.0,-8.0,-8.0,1.0,-0.0 ,-0.0,4.0],[0.979034321653722,9.0,-8.0,-8.0,-0.0,0.0 ,0.0,4.0],[0.9805918993658215,9.0,-8.0,-8.0,-0.0,0.0 ,0.0,4.0],[0.982535399239769,9.0,-8.0,-8.0,-0.0,0.0 ,0.0,4.0],[0.9848625365745777,9.0,-8.0,0.0,-0.0,0.0 ,0.0,4.0],[0.9861691380624547,9.0,-8.0,9.0,-0.0,0.0 ,0.0,4.0],[0.9890665171528752,9.0,-8.0,9.0,-0.0,0.0 ,0.0,4.0],[0.9906564636241261,9.0,-8.0,9.0,-0.0,0.0 ,0.0,4.0],[0.9923399867839999,8.0,-8.0,9.0,-0.0,0.0 ,0.0,4.0],[0.9941166112200059,8.0,0.0,9.0,-0.0,0.0 ,0.0,4.0],[0.9959858387143344,8.0,9.0,9.0,-0.0,0.0 ,0.0,4.0],[1.0,8.0,9.0,9.0,-0.0,0.0 ,0.0,4.0],[0.9926283040590151,8.0,9.0,9.0,1.0,-0.0 ,-0.0,4.0],[0.9853950648363791,8.0,9.0,9.0,1.0,-0.0 ,-0.0,4.0],[0.9783033534412753,8.0,9.0,9.0,1.0,-0.0 ,-0.0,4.0],[0.9713562696924009,8.0,9.0,9.0,1.0,-0.0 ,-0.0,4.0],[0.9672725453726407,8.0,9.0,9.0,2.0,-0.0 ,-0.0,4.0],[0.9700788798821658,8.0,9.0,9.0,2.0,-0.0 ,-0.0,4.0],[0.9636665324721742,8.0,9.0,9.0,2.0,-0.0 ,-0.0,4.0],[0.9574105034864556,8.0,9.0,9.0,2.0,-0.0 ,-0.0,4.0],[0.9605436111892922,8.0,9.0,9.0,2.0,-0.0 ,-0.0,4.0],[0.9487536755227926,7.0,9.0,9.0,3.0,-0.0 ,-0.0,4.0],[0.9466904540129214,7.0,9.0,9.0,3.0,-0.0 ,-0.0,4.0],[0.9413353126952834,7.0,9.0,9.0,4.0,-0.0 ,-0.0,4.0],[0.9311474011348653,7.0,9.0,8.0,4.0,-0.0 ,-0.0,4.0],[0.9351848878770146,7.0,9.0,8.0,5.0,-0.0 ,-0.0,4.0],[0.9216750671555856,7.0,9.0,8.0,5.0,-0.0 ,-0.0,4.0],[0.9216233210888376,7.0,9.0,8.0,6.0,-0.0 ,-0.0,4.0],[0.9129405847344317,7.0,8.0,8.0,6.0,-0.0 ,-0.0,3.0],[0.9002627960043198,7.0,8.0,8.0,6.0,-0.0 ,-0.0,3.0],[0.9049653187593389,7.0,8.0,8.0,7.0,-0.0 ,-0.0,3.0],[0.897769502780135,6.0,8.0,8.0,7.0,-0.0 ,-0.0,3.0],[0.8893901729931941,6.0,8.0,8.0,8.0,-0.0 ,-0.0,3.0],[0.8913720138920352,6.0,8.0,8.0,8.0,-0.0 ,-0.0,3.0],[0.8831480060615288,6.0,8.0,8.0,8.0,-0.0 ,-0.0,3.0],[0.8722260767038017,6.0,8.0,8.0,8.0,-0.0 ,-0.0,3.0],[0.8777311982987714,6.0,8.0,8.0,9.0,-0.0 ,-0.0,3.0],[0.8731551107257483,6.0,8.0,8.0,9.0,-0.0 ,-0.0,3.0],[0.8653092021129501,6.0,8.0,8.0,9.0,-0.0 ,-0.0,3.0],[0.8575027405315254,6.0,8.0,8.0,9.0,-0.0 ,-0.0,3.0],[0.8497368131719797,6.0,8.0,8.0,9.0,-0.0 ,-0.0,3.0],[0.8343310827180476,6.0,8.0,8.0,9.0,-0.0 ,-0.0,3.0],[0.8328435544039293,6.0,8.0,8.0,9.0,-0.0 ,-0.0,3.0],[0.8167691163317583,5.0,8.0,8.0,0.0,-0.0 ,-0.0,3.0],[0.8021575256254775,5.0,8.0,8.0,0.0,-0.0 ,-0.0,3.0],[0.787759271588277,5.0,8.0,8.0,0.0,-0.0 ,-0.0,3.0],[0.7806438415343121,5.0,8.0,8.0,0.0,-0.0 ,-0.0,3.0],[0.773586266398566,5.0,8.0,7.0,0.0,-0.0 ,-0.0,3.0],[0.7596511177370373,5.0,8.0,7.0,0.0,-0.0 ,-0.0,3.0],[0.7527768763470105,5.0,8.0,7.0,0.0,-0.0 ,-0.0,3.0],[0.7459671556638828,5.0,8.0,7.0,0.0,-0.0 ,-0.0,3.0],[0.7325484567664269,5.0,8.0,7.0,0.0,-0.0 ,-0.0,3.0],[0.7259431891863043,5.0,8.0,7.0,0.0,-0.0 ,-0.0,3.0],[0.7129504606947157,5.0,8.0,7.0,0.0,-0.0 ,-0.0,3.0],[0.7065670049390386,5.0,8.0,7.0,0.0,-0.0 ,-0.0,3.0],[0.6940362953366077,4.0,7.0,7.0,0.0,-0.0 ,-0.0,3.0],[0.6878933441725444,4.0,7.0,7.0,0.0,-0.0 ,-0.0,3.0],[0.6758633745293061,4.0,7.0,7.0,0.0,-0.0 ,-0.0,3.0],[0.6641900455704467,4.0,7.0,7.0,0.0,-1.0 ,-1.0,3.0],[0.6584930711568204,4.0,7.0,7.0,0.0,-1.0 ,-1.0,3.0],[0.6393106025611646,4.0,7.0,7.0,9.0,-1.0 ,-1.0,3.0],[0.6284765954119069,4.0,7.0,7.0,9.0,-1.0 ,-1.0,3.0],[0.6097578656417169,4.0,7.0,7.0,9.0,-1.0 ,-1.0,3.0],[0.5963132311697147,4.0,7.0,7.0,9.0,-1.0 ,-1.0,3.0],[0.5863121377987832,3.0,7.0,7.0,9.0,-1.0 ,-1.0,3.0],[0.572983250556052,3.0,7.0,7.0,9.0,-1.0 ,-1.0,3.0],[0.5596777837927086,3.0,7.0,7.0,9.0,-1.0 ,-1.0,3.0],[0.5503978651813474,3.0,7.0,7.0,9.0,-1.0 ,-1.0,3.0],[0.5372432352119472,3.0,7.0,7.0,9.0,-1.0 ,-1.0,3.0],[0.5198281346600319,3.0,7.0,7.0,9.0,-1.0 ,-1.0,3.0],[0.5027585104218549,3.0,7.0,7.0,9.0,-1.0 ,-1.0,3.0],[0.4988540855829339,3.0,7.0,7.0,9.0,-1.0 ,-1.0,3.0],[0.4860707607266892,3.0,7.0,7.0,9.0,-1.0 ,-1.0,3.0],[0.48242677900417524,3.0,7.0,7.0,9.0,-1.0 ,-1.0,3.0],[0.4733452270064607,3.0,7.0,7.0,9.0,-1.0 ,-1.0,3.0],[0.4572532160899153,2.0,8.0,7.0,9.0,-1.0 ,-1.0,3.0],[0.4540083886230509,2.0,7.0,7.0,9.0,-1.0 ,-1.0,3.0],[0.45095176808445575,2.0,7.0,7.0,9.0,-1.0 ,-1.0,2.0],[0.4266047424222494,2.0,8.0,7.0,9.0,-1.0 ,-1.0,2.0],[0.4216571294713666,2.0,7.0,7.0,9.0,-1.0 ,-1.0,2.0],[0.40995807567080195,2.0,8.0,7.0,9.0,-1.0 ,-1.0,2.0],[0.4004242313490869,2.0,8.0,7.0,9.0,-1.0 ,-1.0,2.0],[0.3965946229156428,1.0,8.0,7.0,9.0,-1.0 ,-1.0,2.0],[0.3840088546607233,1.0,8.0,7.0,9.0,-1.0 ,-1.0,2.0],[0.36254431770037887,1.0,8.0,7.0,8.0,-1.0 ,-1.0,2.0],[0.35172762692264214,1.0,8.0,7.0,8.0,-1.0 ,-1.0,2.0],[0.3515920080138324,0.0,8.0,7.0,8.0,-1.0 ,-1.0,2.0],[0.3419650555228986,-0.0,8.0,7.0,8.0,-1.0 ,-1.0,2.0],[0.34238319106387627,-0.0,8.0,7.0,8.0,-1.0 ,-1.0,2.0],[0.33334923019450713,-0.0,8.0,7.0,8.0,-1.0 ,-1.0,2.0],[0.3259710934394453,-0.0,8.0,7.0,8.0,-1.0 ,-1.0,2.0],[0.32946374057327943,-1.0,8.0,7.0,8.0,-1.0 ,-1.0,2.0],[0.32214466359200933,-1.0,8.0,7.0,8.0,-1.0 ,-1.0,2.0],[0.31526107589554847,-1.0,8.0,7.0,8.0,-1.0 ,-1.0,2.0],[0.3212551690357704,-1.0,8.0,7.0,8.0,-1.0 ,-1.0,2.0],[0.3246516637647133,-2.0,8.0,7.0,8.0,-1.0 ,-1.0,2.0],[0.3145037818018186,-2.0,8.0,8.0,8.0,-2.0 ,-2.0,2.0],[0.318871053200582,-2.0,8.0,7.0,8.0,-2.0 ,-2.0,2.0],[0.3149583767610406,-2.0,8.0,8.0,8.0,-2.0 ,-2.0,2.0],[0.31991629008115596,-3.0,8.0,7.0,8.0,-2.0 ,-2.0,2.0],[0.3250920686659399,-3.0,8.0,7.0,8.0,-2.0 ,-2.0,2.0],[0.33047547631039004,-3.0,8.0,7.0,8.0,-2.0 ,-2.0,2.0],[0.3281583541213389,-3.0,8.0,7.0,8.0,-2.0 ,-2.0,2.0],[0.3340638059988591,-3.0,8.0,7.0,8.0,-2.0 ,-2.0,2.0],[0.34014719528482035,-3.0,8.0,7.0,8.0,-2.0 ,-2.0,2.0],[0.34639914740756106,-4.0,8.0,7.0,8.0,-2.0 ,-2.0,2.0],[0.3528107014705051,-4.0,8.0,7.0,8.0,-2.0 ,-2.0,2.0],[0.35937331523417765,-4.0,8.0,7.0,8.0,-2.0 ,-2.0,2.0],[0.3660788647485219,-4.0,8.0,7.0,8.0,-2.0 ,-2.0,2.0],[0.37291963961636376,-4.0,8.0,7.0,8.0,-2.0 ,-2.0,2.0],[0.3798883347649672,-4.0,8.0,7.0,8.0,-2.0 ,-2.0,2.0],[0.3877167828465483,-4.0,8.0,7.0,8.0,-2.0 ,-2.0,2.0],[0.39514895119231447,-5.0,8.0,7.0,8.0,-2.0 ,-2.0,2.0],[0.40268082949001166,-5.0,8.0,7.0,8.0,-2.0 ,-2.0,2.0],[0.4103069267414464,-5.0,8.0,7.0,8.0,-2.0 ,-2.0,2.0],[0.4180220863879403,-5.0,7.0,7.0,8.0,-2.0 ,-2.0,2.0],[0.4258214674803418,-5.0,7.0,7.0,8.0,-2.0 ,-2.0,2.0],[0.4337005262954681,-5.0,7.0,6.0,8.0,-2.0 ,-2.0,2.0],[0.44165499853810036,-5.0,7.0,6.0,8.0,-2.0 ,-2.0,2.0],[0.44968088222792163,-5.0,7.0,6.0,8.0,-2.0 ,-2.0,2.0],[0.45777442133844004,-5.0,7.0,6.0,8.0,-2.0 ,-2.0,2.0],[0.4659320902289028,-5.0,7.0,6.0,8.0,-2.0 ,-2.0,2.0],[0.4741505788895278,-5.0,6.0,6.0,8.0,-2.0 ,-2.0,2.0],[0.48242677900417524,-5.0,6.0,6.0,8.0,-2.0 ,-2.0,2.0],[0.4907577708221048,-5.0,6.0,5.0,8.0,-2.0 ,-2.0,2.0],[0.49914081082104367,-5.0,6.0,5.0,8.0,-2.0 ,-2.0,2.0],[0.5075733201368698,-5.0,5.0,5.0,8.0,-2.0 ,-2.0,2.0],[0.5160528737303096,-6.0,5.0,5.0,8.0,-2.0 ,-2.0,2.0],[0.5245771902577595,-6.0,5.0,5.0,8.0,-2.0 ,-2.0,2.0],[0.5331441226113344,-6.0,4.0,4.0,8.0,-2.0 ,-2.0,2.0],[0.5417516490922409,-6.0,3.0,4.0,8.0,-2.0 ,-2.0,2.0],[0.5372432352119472,-6.0,4.0,4.0,8.0,-2.0 ,-2.0,2.0],[0.5459608543504028,-6.0,3.0,4.0,8.0,-2.0 ,-2.0,1.0],[0.5547134233709448,-6.0,2.0,4.0,8.0,-2.0 ,-2.0,1.0],[0.5504845078997402,-6.0,3.0,4.0,8.0,-2.0 ,-2.0,1.0],[0.5567730099980984,-6.0,0.0,4.0,8.0,-2.0 ,-2.0,1.0],[0.5590809758711844,-7.0,0.0,4.0,8.0,-2.0 ,-2.0,1.0],[0.5715665201123942,-7.0,6.0,3.0,8.0,-2.0 ,-2.0,1.0],[0.5688063232296658,-7.0,5.0,4.0,8.0,-2.0 ,-2.0,1.0],[0.5756405784373488,-7.0,5.0,3.0,8.0,-2.0 ,-2.0,1.0],[0.5827221048725184,-7.0,5.0,0.0,8.0,-2.0 ,-2.0,1.0]]
    # print "FE",vector
    directory("data")
    
    c=Codebook()
    c.genCB(X)
    # c.centroids=[]
    
    for ec in c.centroids:
            print  ec.coordinates
    
    # dat=[[ 0.97500175824526 , 0.0 , 0.0 , 0.0 , 8.0 , 0.0 , 0.0 , 3.0 ],[ 0.9916672477613746 , 0.0 , 0.0 , 0.0 , 9.0 , 0.0 , 0.0 , 3.0 ],[ 0.9833345004675345 , 0.0 , 0.0 , 0.0 , 8.0 , 0.0 , 0.0 , 3.0 ],[ 0.966669021225703 , 0.0 , 0.0 , 0.0 , 8.0 , 0.0 , 0.0 , 3.0 ],[ 0.9166727163107635 , 0.0 , 0.0 , 0.0 , 5.0 , 0.0 , 0.0 , 3.0 ],[ 0.9500035633423537 , 0.0 , 0.0 , 0.0 , 7.0 , 0.0 , 0.0 , 3.0 ],[ 0.9583362895445761 , 0.0 , 0.0 , 0.0 , 7.0 , 0.0 , 0.0 , 3.0 ],[ 0.8083482203592467 , 0.0 , 0.0 , 0.0 , 3.0 , 0.0 , 0.0 , 3.0 ],[ 0.9416708427644821 , 0.0 , 0.0 , 0.0 , 6.0 , 0.0 , 0.0 , 3.0 ],[ 0.933338127961602 , 0.0 , 0.0 , 0.0 , 6.0 , 0.0 , 0.0 , 3.0 ],[ 0.9083400197922263 , 0.0 , 0.0 , 0.0 , 5.0 , 0.0 , 0.0 , 3.0 ],[ 0.8916746462386432 , 0.0 , 0.0 , 0.0 , 5.0 , 0.0 , 0.0 , 3.0 ],[ 0.7249748276999386 , 0.0 , 0.0 , 0.0 , 2.0 , 0.0 , 0.0 , 3.0 ],[ 0.8416786953337584 , 0.0 , 0.0 , 0.0 , 4.0 , 0.0 , 0.0 , 3.0 ],[ 0.8583439823614466 , 0.0 , 0.0 , 0.0 , 4.0 , 0.0 , 0.0 , 3.0 ],[ 0.7083087397068366 , 0.0 , 0.0 , 0.0 , 2.0 , 0.0 , 0.0 , 3.0 ],[ 0.9346392073338052 , 0.0 , 0.0 , -4.0 , 1.0 , 0.0 , 0.0 , 5.0 ],[ 0.910744908170117 , 0.0 , 0.0 , -1.0 , 1.0 , 0.0 , 0.0 , 5.0 ],[ 0.9268053340445275 , 0.0 , 0.0 , -3.0 , 1.0 , 0.0 , 0.0 , 5.0 ],[ 0.8941243598887474 , 0.0 , 0.0 , -1.0 , 1.0 , 0.0 , 0.0 , 5.0 ],[ 0.9184889605740939 , 0.0 , 0.0 , -2.0 , 1.0 , 0.0 , 0.0 , 5.0 ],[ 0.8858147274727042 , 0.0 , 0.0 , -1.0 , 1.0 , 0.0 , 0.0 , 5.0 ],[ 0.9529228406030814 , 0.0 , 0.0 , -2.0 , 1.0 , 0.0 , 0.0 , 6.0 ],[ 0.877505539078311 , 0.0 , 0.0 , -1.0 , 1.0 , 0.0 , 0.0 , 5.0 ],[ 0.944615872136736 , 0.0 , 0.0 , -1.0 , 1.0 , 0.0 , 0.0 , 6.0 ],[ 0.9619162990929421 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 6.0 ],[ 0.8525807678436259 , 0.0 , 0.0 , 0.0 , 1.0 , 0.0 , 0.0 , 5.0 ],[ 0.8093784011770541 , 0.0 , 0.0 , -1.0 , 1.0 , 0.0 , 0.0 , 5.0 ],[ 0.8389793398303307 , 0.0 , 0.0 , -1.0 , 1.0 , 0.0 , 0.0 , 5.0 ],[ 0.7927348745630644 , 0.0 , 0.0 , -1.0 , 1.0 , 0.0 , 0.0 , 5.0 ],[ 0.7587617168360403 , 0.0 , 0.0 , -1.0 , 1.0 , 0.0 , 0.0 , 5.0 ],[ 0.6972952275925031 , 0.0 , 0.0 , -1.0 , 1.0 , 0.0 , 0.0 , 5.0 ],[ 0.6416984961283125 , 1.0 , 0.0 , -1.0 , 1.0 , 0.0 , 0.0 , 5.0 ],[ 0.5917048042535314 , 1.0 , 0.0 , -1.0 , 1.0 , 0.0 , 0.0 , 4.0 ],[ 0.6167015575258327 , 1.0 , 0.0 , -1.0 , 1.0 , 0.0 , 0.0 , 5.0 ],[ 0.5333799137124682 , 1.0 , 0.0 , -1.0 , 1.0 , 0.0 , 0.0 , 4.0 ],[ 0.01178470383577415 , 5.0 , 0.0 , 0.0 , 1.0 , 0.0 , 0.0 , 4.0 ],[ 0.05892351917887075 , 1.0 , 0.0 , 0.0 , 1.0 , 0.0 , 0.0 , 4.0 ],[ 0.520881914135592 , 1.0 , 0.0 , -1.0 , 1.0 , 0.0 , 0.0 , 4.0 ],[ 0.5000520770046719 , 1.0 , 0.0 , -1.0 , 1.0 , 0.0 , 0.0 , 4.0 ],[ 0.5583761312015072 , 1.0 , 0.0 , -1.0 , 1.0 , 0.0 , 0.0 , 4.0 ],[ 0.4583931684960246 , 1.0 , 0.0 , -1.0 , 1.0 , 0.0 , 0.0 , 4.0 ],[ 0.47922249105258496 , 1.0 , 0.0 , -1.0 , 1.0 , 0.0 , 0.0 , 4.0 ],[ 0.4500615270146329 , 1.0 , 0.0 , -1.0 , 1.0 , 0.0 , 0.0 , 4.0 ],[ 0.026351398871493518 , 2.0 , 0.0 , 0.0 , 1.0 , 0.0 , 0.0 , 4.0 ],[ 0.26889713456412295 , 1.0 , 0.0 , 0.0 , 1.0 , 0.0 , 0.0 , 4.0 ],[ 0.008333043996551019 , 0.0 , 0.0 , 0.0 , 1.0 , 0.0 , 0.0 , 4.0 ],[ 0.07545892276181332 , 1.0 , 0.0 , 0.0 , 1.0 , 0.0 , 0.0 , 4.0 ],[ 0.5127532885275069 , 0.0 , 1.0 , 0.0 , 2.0 , 0.0 , 0.0 , 3.0 ],[ 0.48360389806857534 , 0.0 , 1.0 , 0.0 , 2.0 , 0.0 , 0.0 , 3.0 ],[ 0.441965674441923 , 0.0 , 1.0 , 0.0 , 2.0 , 0.0 , 0.0 , 3.0 ],[ 0.36609490388478655 , 0.0 , 1.0 , 0.0 , 2.0 , 0.0 , 0.0 , 3.0 ],[ 0.766685334627689 , 0.0 , 0.0 , 0.0 , 3.0 , 0.0 , 0.0 , 3.0 ],[ 0.6833096077171835 , 0.0 , 0.0 , 0.0 , 2.0 , 0.0 , 0.0 , 3.0 ],[ 0.6264050926972607 , 0.0 , 0.0 , 0.0 , 2.0 , 0.0 , 0.0 , 3.0 ],[ 0.5562931334406254 , 0.0 , 0.0 , 0.0 , 2.0 , 0.0 , 0.0 , 3.0 ],[ 0.0235694076715483 , -4.0 , 1.0 , 0.0 , 1.0 , 0.0 , 0.0 , 3.0 ],[ 0.061045189197826415 , -1.3333333333333333 , 1.0 , 0.0 , 1.0 , 0.0 , 0.0 , 3.0 ],[ 0.29155131532986617 , 0.0 , 1.0 , 0.0 , 1.0 , 0.0 , 0.0 , 3.0 ],[ 0.16614868243275102 , 0.0 , 1.0 , 0.0 , 1.0 , 0.0 , 0.0 , 3.0 ],[ 1.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 3.0 ],[ 0.22637676828543993 , 0.0 , 1.0 , 0.0 , 1.0 , 0.0 , 0.0 , 3.0 ],[ 0.425311904321082 , 0.0 , 1.0 , 0.0 , 1.0 , 0.0 , 0.0 , 3.0 ],[ 0.41698538836526544 , 0.0 , 1.0 , 0.0 , 1.0 , 0.0 , 0.0 , 3.0 ]]
    # c=Codebook()
    # for i in dat:
        # c.centroids.append(Centroid(i))

    # c.dimension=len(dat[0])
    c.saveToFile()


def quantize(rawdata):
    ob = GFE(rawdata)
    qv=[]
    for i in range(len(rawdata)-1):
        qv.append(ob.extractedFeature[i].getFeatureVector())
    X=np.vstack(qv).squeeze()
    cbk = [name for name in os.listdir("./data") if name.endswith(".cbk")]
    if len(cbk)==1:
        init=load_object("./data/data.cbk")
    else:
        init=64
    # whiten(X)
    codebook, distortion = kmeans(X, init, 1)
    code, dist = vq(X, codebook)
    # print code
    return code


boxes=[]

# cap = cv2.VideoCapture(0)
# _,img = cap.read()
img=np.zeros(shape=(480,640,3))
while(1):
    cv2.namedWindow('real image')
    cv.SetMouseCallback('real image', on_mouse, 0)
    for point in range(len(boxes)-1):
        cv2.line(img,(boxes[point][0], boxes[point][1]),(boxes[point+1][0], boxes[point+1][1]),[255,255,0],2)
    cv2.imshow('real image', img)
    img=np.zeros(shape=img.shape)
    
    
    c=cv2.waitKey(1)
    if c==27:
        
        break
    elif c==ord('s'):
        directory(gname)
        fname=int(time.time())
        save_object(boxes, "./"+gname+"/"+str(fname)+".raw")
    elif c==ord('g'):
        gen_cb()
    elif c==ord('G'):
        genxcb()
    elif c==ord('r'):
        boxes=[]
    elif c==ord('q'):
        # boxes=[[355,137],[354,137],[353,137],[352,137],[351,137],[350,137],[349,137],[348,137],[347,137],[345,137],[344,137],[342,137],[338,137],[336,137],[332,137],[327,137],[322,138],[320,138],[317,138],[315,138],[313,138],[311,137],[309,137],[308,137],[305,137],[304,137],[302,137],[301,137],[300,137],[298,136],[295,136],[294,136],[292,136],[288,136],[286,136],[285,136],[282,134],[279,134],[278,134],[276,134],[275,135],[274,135],[272,135],[269,135],[268,135],[266,135],[265,135],[262,135],[260,136],[259,136],[257,136],[253,136],[251,136],[249,136],[246,136],[241,136],[239,136],[237,136],[235,137],[234,137],[232,137],[228,137],[226,137],[221,137],[219,137],[218,137],[217,137],[215,137],[213,137],[209,137],[205,137],[201,137],[198,137],[197,137],[191,137],[188,137],[186,137],[184,137],[182,137],[181,137],[180,137],[178,137],[177,137],[175,137],[173,137],[172,137],[171,137],[168,137],[164,137],[161,137],[158,137],[155,139],[152,139],[147,140],[145,140],[143,142],[140,143],[138,143],[136,143],[136,144],[133,144],[133,145],[133,146],[130,146],[129,146],[128,146],[126,146],[125,145],[124,145],[123,144],[122,147],[121,147],[120,148],[119,148]]
        # boxes=[[357,130],[356,130],[355,130],[354,130],[353,130],[352,130],[351,130],[350,129],[348,128],[344,128],[341,128],[334,128],[328,128],[319,127],[312,127],[303,127],[294,129],[291,129],[285,129],[281,130],[276,130],[273,130],[271,130],[267,130],[262,128],[259,128],[254,128],[251,127],[246,127],[244,127],[240,127],[239,127],[236,127],[233,126],[229,125],[226,125],[224,125],[220,125],[217,125],[214,125],[209,125],[202,119],[198,119],[195,117],[193,117],[191,117],[187,117],[185,117],[183,117],[181,117],[179,117],[174,117],[172,117],[169,117],[165,117],[162,117],[159,117],[155,118],[150,118],[142,118],[137,118],[133,118],[129,118],[127,118],[124,118],[122,118],[118,118],[115,118],[111,118],[108,120],[104,120],[101,119],[93,118],[90,117],[84,116],[82,116],[81,116],[80,116],[79,116],[79,115]]
        # boxes=[[156,48],[156,50],[156,52],[156,54],[156,56],[156,58],[157,65],[159,68],[160,77],[160,79],[160,84],[160,88],[160,93],[160,97],[160,101],[160,105],[160,108],[160,118],[162,131],[163,135],[163,137],[163,141],[163,145],[163,147],[163,149],[163,154],[163,157],[163,159],[163,163],[164,166],[164,171],[164,177],[167,183],[166,196],[166,199],[166,202],[166,206],[166,208],[166,210],[165,212],[165,213],[165,215],[165,216],[165,217],[165,218],[166,218],[167,217],[168,217],[170,216],[176,216],[177,216],[180,216],[186,216],[190,215],[198,215],[203,215],[211,213],[218,213],[228,213],[235,213],[244,213],[247,213],[252,213],[255,212],[259,212],[265,212],[266,212],[269,212],[270,212],[272,212],[273,212],[275,212],[278,212],[282,212],[283,211],[285,211],[287,211],[288,210],[289,210]]
        cb=Codebook()
        cb.load()
        print "CLEN" , len(cb.centroids)
        ob = GFE(boxes)
        qv=[]
        for i in range(len(boxes)-1):
            qv.append(  Points(ob.extractedFeature[i].getNFeatureVector())  )
        X=np.vstack(qv).squeeze()
        # X=qv
        print cb.quantize(X)

        
    elif c==ord('t'):
		cb=Codebook()
		cb.load()
		dirs = [name for name in os.listdir(".") if os.path.isdir(os.path.join(".", name)) and name!='data']
		
		mkv=HiddenMarkov(4, 64)
		for tname in dirs:
			tmp=[]    
			raws = [name for name in os.listdir("./"+tname) if name.endswith(".raw")]
			for name in raws:
				rl =  load_object("./"+tname+"/"+name)
				ob = GFE(rl)
				fqv=[]
				for i in range(len(rl) - 1):
					fqv.append(  Points(ob.extractedFeature[i].getNFeatureVector())  )
				tm=cb.quantize(fqv)
				print "Training seq", tm
				tmp.append(tm)
            
			print "Starting training for ", tname
			mkv.setTrainSeq(np.array(tmp))
			print "training", tname
			mkv.train()
			print "Saving", tname
			mkv.save("./"+tname+"/"+tname+".hmm")
			print "OP", mkv.output
			print "TR", mkv.transition
		print "Training done"
    elif c==ord('v'):
        # qs=[24, 24, 24, 24, 24, 24, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 22, 22, 22, 22, 21, 21, 21, 21, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 16, 16, 17, 17, 17, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 3, 3, 2]
        """
        line=HiddenMarkov(4, 64)
        line.initFromName("./Line/Line.hmm")
        print line.viterbi(qs)
        L=HiddenMarkov(4, 64)
        L.initFromName("./L/L.hmm")
        print L.viterbi(qs)
        UL=HiddenMarkov(4, 64)
        UL.initFromName("./UL/UL.hmm")
        print UL.viterbi(qs)
        
        break
        """
        ml=[]
        
        # boxi=[40,40,41,4,4,5,5,7,6,1,1,26,1,33,36,36,36,38,38,38]
        cb=Codebook()
        cb.load()
        ob = GFE(boxes)
        qv=[]
        for i in range(len(boxes)-1):
            qv.append(  Points(ob.extractedFeature[i].getNFeatureVector())  )
        X=np.vstack(qv).squeeze()
        qt = cb.quantize(X)
        print qt
        
        # qt=[6,6,7,7,7,7,2,2,3,3,3,3,3,5,5,5,20,20,20,21,21,21,22,22,22,22,22,19,19,19,19,19,19,19,19,19,19,19,19,18,18,18,8,8,9,9,9,11,11,14,14,14,14,14,29,29,29,29,30,30,27,25,24,15]
        dirs = [name for name in os.listdir(".") if os.path.isdir(os.path.join(".", name)) and name!='data']
        for md in dirs:
            x=HiddenMarkov(4,64)
            x.initFromName("./"+md+"/"+md+".hmm")
            ml.append(x)
            print md, x.viterbi(qt)
            x=None
        """
        lk=[]
        for i in ml:
            lk.append(i.viterbi(qt))
        
        print line.viterbi(quantize(boxes))

        print L.viterbi(quantize(boxes))
        print UL.viterbi(quantize(boxes))
        
        maxi=-50000
        maxIndex=0
        for i in range(len(lk)):
            if lk[i] > maxi:
                maxi = lk[i]
                maxIndex = i
        print dirs[maxIndex]
        for i in range(len(ml)):
            print lk[i], dirs[i]
        """
    elif c==ord('h'):
        hname="UL"
        """
        td_line=[[59,59,58,58,58,55,55,54,55,55,55,53,53,53,53,53,53,60,60],[59,57,58,57,57,59,59,54,54,54,57,57,59,57,57,57,57,60],[50,39,50,50,50,50,50,50,50,52,52,52,52,53,53,53,53,57,57,57,57,54,55,55,55,58,58,57,57,57,57,57,57,57,57,57,57,57,60],[59,58,58,55,56,59,54,54,56,55,55,55,53,53,60],[59,49,57,57,57,57,57,57,57,57,57,57,56,57,57,57,56,57,57,56,57,57,57,57,57,53,53,53,53,53,52,52,60]]
        td_l=[[10,32,12,2,2,2,3,3,49,49,56,56,56,37,37,22,21,24,27,28,29,29,29,60],[10,10,0,0,0,2,2,2,2,2,3,3,3,16,16,23,23,22,21,20,24,24,24,25,25,25,25,28,28,60],[10,10,2,2,2,2,2,2,2,2,3,3,15,34,35,35,35,38,37,37,36,36,22,22,21,20,24,24,28,27,28,30,29,29,29,60,60],[10,10,2,2,2,2,3,3,3,16,16,16,23,23,23,22,22,20,24,24,25,28,28,27,31,31],[10,11,12,2,2,2,2,2,2,2,3,3,3,16,16,16,23,23,23,22,22,21,21,20,24,24,25,27,27,28,28,29,60,60]]
        td_ul=[[47,41,4,4,4,4,5,5,5,7,7,7,6,1,1,3,26,26,33,33,36,36,36,37,38,38,38,39,39,60,60],[41,41,41,41,4,4,4,4,5,5,5,5,7,7,6,1,1,1,1,1,26,33,33,36,36,36,36,37,37,38,39,39],[40,41,41,4,4,4,4,4,4,4,5,5,5,7,6,1,1,1,1,26,26,24,24,24,33,36,36,36,36,36,36,37,60,60],[40,42,42,42,42,42,41,41,41,5,7,6,6,1,1,1,1,24,1,33,36,36,36,38,38,38]]
        """
        td_line=[[59,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,56,56,56,56,56,57,57,57,57,57,57,57,57,57,57,53,53,53,53,53,53,53,53,53,53,53,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,48,52],[59,58,58,58,58,58,58,58,58,58,58,58,59,59,59,59,59,59,59,59,58,55,55,55,55,55,54,54,56,56,55,55,55,55,55,55,55,55,55,53,53,53,53,53,53,53,53,53,53,53,53,52,52,52,52,52,52,52,52],[59,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,54,54,56,57,57,57,57,57,57,57,57,57,53,53,53,53,53,53,53,53,53,53,53,53,53,52,52,48]]

        mkv=HiddenMarkov(4, 64)
        mkv.setTrainSeq(np.array(td_ul))
        mkv.train()
        mkv.save("./"+hname+"/"+hname+".hmm")
    elif c==ord('x'):
        ts=[[24,24,24,24,25,26,27,28,28,28,30,29,29,31,41,41,40,41,41,40,42,43,43,42,42,46,47,45,45,45,45,44,44,44,44,44,39,39,39,39,38,38,38,38,38,38,38,37,37,37,37,37,36,36,36,36,36,35,35,35,35,34,34,33,33,33,33,33,33,32,32,32,32,56,16,16,16,16,17,17,17,17,17,17,18,18,18,18,18,19,19,3,3,3,0,0,0,0,0,0,1,1,2,2,2,2,20,21,21,22,22,23,23,23,5,5,5,4,4,4,4,4,4,6,6,6,6,6,6,7,7,7,7,7,13,13,12,12,12,12,12,14,14,14,15,15,14,14,14,11,11,11,11,10,10,10,9,9,9,9,9,9,8,8,8,8,8,8,8,8,8,8,8,8,8]]
        mkv=HiddenMarkov(4, 64)
        mkv.setTrainSeq(np.array(ts))
        mkv.train()
        mkv.save("./Circle/Circle.hmm")
    elif c==ord('X'):
        qs=[24,24,25,25,24,25,25,25,27,30,27,31,29,29,31,29,41,41,47,46,47,46,46,46,46,47,47,47,47,47,44,44,45,45,39,39,39,39,39,39,39,39,39,38,38,37,37,37,37,36,36,36,36,36,35,35,34,34,34,34,34,33,33,33,33,33,33,33,33,33,33,33,32,32,32,32,56,22,22,16,16,17,17,17,17,17,18,18,18,19,19,19,3,3,3,2,2,2,2,23,23,23,23,23,23,23,23,59,59,59,59,4,7,7,7,7,13,7,7,13,13,13,13,13,13,13,13,13,13,13,13,15,15,15,15,15,15,15,11,11,11,11,11,11,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,8,57,24,24,24,24,24,24]
        Line=HiddenMarkov(4,64)
        Line.initFromName("./Line/Line.hmm")
        print Line.viterbi(qs)
        Circ=HiddenMarkov(4,64)
        Circ.initFromName("./Circle/Circle.hmm")
        print Circ.viterbi(qs)
    elif c==ord('f'):
        ob = GFE(boxes)
        fqv=[]
        for i in range(len(boxes) - 1):
            fqv.append(  ob.extractedFeature[i].getNFeatureVector()  )
        print fqv
    elif c==ord('T'):
    	tmp=[[24,24,24,24,25,26,27,28,28,28,30,29,29,31,41,41,40,41,41,40,42,43,43,42,42,46,47,45,45,45,45,44,44,44,44,44,39,39,39,39,38,38,38,38,38,38,38,37,37,37,37,37,36,36,36,36,36,35,35,35,35,34,34,33,33,33,33,33,33,32,32,32,32,56,16,16,16,16,17,17,17,17,17,17,18,18,18,18,18,19,19,3,3,3,0,0,0,0,0,0,1,1,2,2,2,2,20,21,21,22,22,23,23,23,5,5,5,4,4,4,4,4,4,6,6,6,6,6,6,7,7,7,7,7,13,13,12,12,12,12,12,14,14,14,15,15,14,14,14,11,11,11,11,10,10,10,9,9,9,9,9,9,8,8,8,8,8,8,8,8,8,8,8,8,8]]
    	mkv=HiddenMarkov(4, 64)
    	mkv.output=[[ 0.36953436,0.19598372,0.08982479,0.26363117,0.26485188,0.87405232,0.3104701, 0.38166135,0.12646175,0.1246966, 0.14333271,0.42430546,0.33121599,0.98518463,0.91340862,0.30334883,0.70987023,0.76597139,0.44544497,0.8616658, 0.88460427,0.94827118,0.68413069,0.68006399,0.14682812,0.07880796,0.27239964,0.39178019,0.21225799,0.53520959,0.17185833,0.23372217,0.26197625,0.35665085,0.11342377,0.475398,0.53698304,0.50862632,0.71012491,0.74063726,0.45943932,0.4983742,0.3948246, 0.48789056,0.4161692, 0.16100604,0.45332451,0.00514567,0.15081786,0.63886889,0.41609237,0.99294587,0.62666633,0.49068639,0.48507395,0.32807081,0.1134539, 0.21477618,0.4683959, 0.77060636,0.54271318,0.21297853,0.35680518,0.90817007],[ 0.56750997,0.15244005,0.57872753,0.17904646,0.83457942,0.94508257, 0.54190004,0.01207668,0.61797715,0.57935944,0.54080001,0.72714057, 0.50938535,0.59957339,0.98452539,0.40230783,0.488466,0.5700868, 0.55679544,0.85365305,0.80603701,0.30369575,0.7379945, 0.4309972, 0.53364373,0.70728341,0.42538153,0.81275701,0.10110379,0.31078665, 0.20360748,0.04333151,0.53033057,0.54736895,0.13168782,0.0094116, 0.87848394,0.97880851,0.7997542, 0.4554397, 0.76747402,0.48458676, 0.66287739,0.27172192,0.48739451,0.24304105,0.86898709,0.4151162, 0.34180404,0.92666639,0.72899294,0.76194888,0.81717692,0.6688049, 0.53007975,0.7865035, 0.66509064,0.63136789,0.55432364,0.6821612, 0.12007275,0.47625354,0.09014107,0.87882442],[ 0.41411401,0.84730505,0.5314073, 0.42992594,0.20264881,0.62405617, 0.67016647,0.72496755,0.03482625,0.37809867,0.14168163,0.8557606, 0.9918291, 0.59131501,0.2762018, 0.05742589,0.25172495,0.01446863, 0.20896549,0.41350863,0.75484781,0.84355856,0.88981004,0.29459419, 0.29661281,0.12205803,0.72620028,0.21244065,0.03360511,0.73175435, 0.01610254,0.65124513,0.65391232,0.92256859,0.37134714,0.67954065, 0.19873429,0.26284617,0.67722258,0.71204053,0.88352127,0.90308002, 0.3377923, 0.59501051,0.52151985,0.5138592, 0.26118273,0.87601889, 0.36845128,0.71236852,0.91413352,0.46717065,0.02292141,0.5619901, 0.45836536,0.32425204,0.40693288,0.04078351,0.64945457,0.97943664, 0.63202215,0.70155233,0.50084791,0.81614766], [ 0.38053959,0.58521441,0.07066778,0.04638581,0.10468413,0.34626914, 0.41889552,0.8091748, 0.93604059,0.04059781,0.53413318,0.63002398, 0.46664192,0.7660146, 0.81854606,0.81047577,0.49999249,0.60572624, 0.6009544, 0.95918231,0.21148062,0.42079857,0.26195299,0.62601794, 0.98318005,0.29585371,0.51359912,0.96331065,0.24117602,0.45917561, 0.286697,0.22996295,0.93594394,0.46337351,0.12966658,0.35834149, 0.65270568,0.68700919,0.195269,0.06359174,0.64713036,0.28268207, 0.60993091,0.44978612,0.97099406,0.89933245,0.27079164,0.04509898, 0.07116063,0.28806396,0.79504335,0.52017146,0.88395056,0.53127009, 0.73536133,0.73507919,0.61389444,0.87332982,0.66874822,0.40690486, 0.21409875,0.33160526,0.46409337,0.79309219]]
    	mkv.transition=[[ 0.43358209,  0.69263181,  0.76375569 , 0.        ],[ 0.        ,  0.16341849 , 0.20901959 , 0.25965116],[ 0.        ,  0.         , 0.46466536 , 0.65105618],[ 0.        ,  0.        ,  0.         , 0.78337595]]
    	# print "BFR"
    	# print "OP", mkv.output
        # print "PI", mkv.pi
        # print "TR", mkv.transition
        mkv.setTrainSeq(np.array(tmp))
        mkv.train()
        # mkv.save("./"+tname+"/"+tname+".hmm")
        print mkv.viterbi(tmp[0])
        # print "OP", mkv.output
        # print "PI", mkv.pi
        # print "TR", mkv.transition
    elif c==ord('V'):
    	ts=[[8, 8, 8, 8, 9, 9, 10, 11, 16, 16, 16, 16, 16, 16, 27, 27, 29, 17, 17, 19, 19, 18, 21, 21, 21, 21, 21, 20, 20, 20, 20, 20, 20, 20, 41, 40, 43, 42, 36, 36, 37, 37, 37, 37, 39, 39, 39, 39, 38, 38, 38, 38, 38, 39, 38, 38]]
    	vs=[57, 57, 57, 57, 57, 57, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 53, 53, 53, 62, 53, 53, 53, 53, 62, 62, 62, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 51, 51, 49, 48, 50, 50]
    	m=HiddenMarkov(4,64)
    	m.setTrainSeq(ts)
    	m.train()
    	print m.viterbi(vs)
    	m.save("./UL/UL.hmm")
    	"""
    	n=HiddenMarkov(4,64)
    	n.initFromName("./Line/Line.hmm")
    	print n.viterbi(vs)
    	"""


                





        
cv2.destroyAllWindows()
    